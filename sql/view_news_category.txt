drop function count_news_category(integer);
create function count_news_category (integer) returns integer as '
declare
	count_news integer;
begin
	select count(news.id) from news into count_news where category_id = $1;
	return count_news;
end;
' LANGUAGE plpgsql;

drop function count_votes_news_category(integer);
create function count_votes_news_category (integer) returns integer as '
declare
	count_votes integer;
begin
	select sum(news.votes_count) from news into count_votes where category_id = $1;
	return count_votes;
end;
' LANGUAGE plpgsql;

drop function count_views_news_category(integer);
create function count_views_news_category (integer) returns integer as '
declare
	count_views integer;
begin
	select sum(news.views_count) from news into count_views where category_id = $1;
	return count_views;
end;
' LANGUAGE plpgsql;

drop function count_comments_news_category(integer);
create function count_comments_news_category (integer) returns integer as '
declare
	count_comments integer;
begin
	select sum(news.comments_count) from news into count_comments where category_id = $1;
	return count_comments;
end;
' LANGUAGE plpgsql;

drop table view_news_category;
drop view view_news_category;
create view view_news_category as
select
	news_category.id news_category_id,
	news_category.name news_category_name,
	count_news_category(news_category.id) count_news,
	count_views_news_category(news_category.id) count_views,
	count_votes_news_category(news_category.id) count_votes,
	count_comments_news_category(news_category.id) count_comments
from news_category;